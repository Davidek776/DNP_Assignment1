@page "/CreatePost"
@attribute [Authorize]
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@inject IPostService postService;


<div class="card">
    <h3>Create Post</h3>
    <div class="form-group field">
        <label>Title:</label>
        <input type="text" @bind="title" @bind:event="oninput"/>
    </div>
    <div class="form-group field">
        <label>Body:</label>
        <input type="text" @bind="body" @bind:event="oninput"/>
    </div>
    <div class="button-row">
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
        <button @onclick="Create" disabled="@(string.IsNullOrEmpty(title))" class="acceptbtn">Create</button>
    </div>
</div>


@code {
    private string title = "";
    private string body = "";
    private string resultMsg = "";
    private string color = "";

    private async Task Create()
    {
        resultMsg = "";
        
        try
        {
            await postService.Create(new PostCreationDto(title,body));
            title = "";
            body = "";
            color = "green";
            resultMsg = "Post successfully created";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
           
        }
        Console.WriteLine("Ahoj");
    }
}